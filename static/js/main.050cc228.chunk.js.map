{"version":3,"sources":["index.css.js","style/App.js","style/Containers.js","style/Form.js","actions/planner.actions.js","constants/planner.contants.js","components/Form.js","containers/AddElement.js","style/Element.js","components/Element.js","style/ElementsList.js","containers/ElementsList.js","localStorage.js","containers/NotFound.js","containers/Info.js","App.js","reducers/planner.reducer.js","reducers/index.js","index.js"],"names":["GlobalStyle","createGlobalStyle","theme","colors","main","Title","styled","h3","Subtitle","h4","Button","button","props","ButtonInside","Main","div","AppContainer","AddContainer","ElementsContainer","ErrorContainer","InfoContainer","Input","input","Label","label","addElement","span","color","id","expiredDate","text","createdDate","type","connect","state","planner","required","value","undefined","composeValidators","validators","reduce","error","validator","onSubmit","values","hour","hours","slice","minutes","actualDate","Date","actualHours","getHours","actualMinutes","getMinutes","day","getDate","month","getMonth","year","getFullYear","Number","getTime","length","task","render","min","handleSubmit","form","submitting","pristine","name","validate","isNaN","lenght","meta","placeholder","touched","disabled","onClick","reset","AddElement","SingleElement","li","expired","Text","p","Hour","Manage","Element","f","date","dateString","toLocaleDateString","to","List","ul","dispatch","removeClick","removeElement","statestring","JSON","stringify","localStorage","setItem","save","sortedPlanner","sort","a","b","actualTime","elementsToDo","filter","elementsExpired","map","element","key","NotFound","useParams","elementExist","find","d","showDate","loadElement","loadedState","getItem","parse","load","forEach","loadDateFromLocalStorage","basename","process","exact","path","action","elementsWithoutElementToRemove","combineReducers","plannerReducer","store","createStore","mainReducer","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.050cc228.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`  \n  body {\n    height: 100vh;\n    margin: 0;\n    font-family: Arial, Helvetica, sans-serif;\n  }\n\n  * {\n    text-decoration: none;\n  }\n\n  a {\n    width: 100%;\n  }\n`;\n\nexport default GlobalStyle;","import styled from \"styled-components\";\r\n\r\nexport const theme = {\r\n    colors: {\r\n        main: \"#19a56f\",\r\n    }\r\n}\r\n\r\nexport const Title = styled.h3`\r\n    letter-spacing: 1.2px;\r\n    text-align: center;\r\n    width: 100%;\r\n`\r\n\r\nexport const Subtitle = styled.h4`\r\n    letter-spacing: 1.2px;\r\n`\r\n\r\nexport const Button = styled.button`\r\n    display: block;\r\n    margin-left: calc(100% - 120px);\r\n    background: ${props => props.theme.colors.main};\r\n    font-size: 0.8rem;\r\n    padding: 10px 15px;\r\n    width: 120px;\r\n    border: none;\r\n    color: #fff;\r\n`\r\n\r\nexport const ButtonInside = styled(Button)`\r\n    background: #fff;\r\n    color: ${props => props.theme.colors.main};\r\n    border: 1px solid ${props => props.theme.colors.main};\r\n    width: 100%;\r\n    min-width: 60px;\r\n    margin-top: 2px;\r\n    margin-left: 0;\r\n    `\r\n\r\nexport const Main = styled.div`\r\n    margin: 0 auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    max-width: 800px;\r\n`\r\n\r\nexport const AppContainer = styled.div`\r\n    min-height: 100vh;\r\n    height: 100%;\r\n    font-size: 16px;\r\n    background: ${props => props.theme.colors.main};\r\n`\r\n","import styled from \"styled-components\";\r\n\r\nexport const AddContainer = styled.div`\r\n    background: white;\r\n    box-shadow: 0px 10px 15px 3px rgba(0,0,0,0.2);\r\n    padding: 10px;\r\n    margin-top: 5px;\r\n`\r\n\r\nexport const ElementsContainer = styled(AddContainer)`\r\n    padding: 10px 0; \r\n`;\r\n\r\n\r\nexport const ErrorContainer = styled(AddContainer)`\r\n\r\n`\r\nexport const InfoContainer = styled(AddContainer)`\r\n\r\n`","import styled from \"styled-components\";\r\n\r\nexport const Input = styled.input`\r\n    display: block;\r\n    width: 100%;\r\n    padding: 10px 0;\r\n    margin: 5px 0;\r\n`\r\n\r\nexport const Label = styled.label`\r\n    color: ${props => props.theme.colors.main};\r\n    font-weight: bold;\r\n`\r\nexport const InputCorrectInfo = styled.span`\r\n    display: block;\r\n    border: 1px solid ${props => props.color};\r\n    color: ${props => props.theme.colors.main};\r\n    margin-top: 5px;\r\n    padding: 10px;\r\n    font-size: 0.8rem;\r\n    text-align: center;\r\n`","import {\r\n    PLANNER_ADD,\r\n    PLANNER_REMOVE\r\n} from '../constants'\r\n\r\nexport const addElement = (id, expiredDate, text, createdDate) => ({\r\n    type: PLANNER_ADD,\r\n    id,\r\n    expiredDate,\r\n    createdDate,\r\n    text\r\n})\r\n\r\nexport const removeElement = (id) => ({\r\n    type: PLANNER_REMOVE,\r\n    id\r\n})\r\n","export const PLANNER_ADD = 'PLANNER_ADD';\r\nexport const PLANNER_REMOVE = 'PLANNER_REMOVE';","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Form as FinalForm, Field } from 'react-final-form'\r\n\r\nimport { Input, Label } from '../style/Form';\r\nimport { Button } from '../style/App';\r\n\r\nimport { addElement } from '../actions/planner.actions';\r\n\r\nconst Form = ({ planner, addElement }) => {\r\n\r\n    const required = value => (value ? undefined : 'Pole jest wymagane')\r\n    const minLenght = min => value =>\r\n        isNaN(value) || value.lenght >= min ? undefined : `Treść musi być wieksza lub rowna niz ${min} znaków`\r\n    const composeValidators = (...validators) => value =>\r\n        validators.reduce((error, validator) => error || validator(value), undefined)\r\n\r\n    const onSubmit = values => {\r\n        const value = values.hour;\r\n        const hours = value.slice(0, 2);\r\n        const minutes = value.slice(3, 5);\r\n        const actualDate = new Date();\r\n        const actualHours = actualDate.getHours();\r\n        const actualMinutes = actualDate.getMinutes();\r\n        let day = actualDate.getDate() < 10 ? `0${actualDate.getDate()}` : actualDate.getDate();\r\n        const month = actualDate.getMonth() < 10 ? `0${actualDate.getMonth()}` : actualDate.getMonth();\r\n        const year = actualDate.getFullYear()\r\n        if (Number(hours) < actualHours || ((Number(hours) == actualHours) && (actualMinutes > Number(minutes)))) {\r\n            day++;\r\n        }\r\n        const expiredDate = new Date(year, month, day, hours, minutes).getTime();\r\n        const id = planner.length === 0 ? 1 : planner[planner.length - 1].id + 1;\r\n        const createdDate = new Date().getTime();\r\n        addElement(id, expiredDate, values.task, createdDate);\r\n    }\r\n\r\n    return (\r\n        <FinalForm onSubmit={onSubmit}\r\n            render={({ handleSubmit, form, submitting, pristine, values }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                    <Field name=\"task\" validate={composeValidators(required, minLenght(10))}>\r\n                        {({ input, meta }) => (\r\n                            <div>\r\n                                <Label>Zadanie</Label>\r\n                                <Input {...input} type=\"text\" placeholder=\"Treść nowego zadania...\" />\r\n                                {meta.error && meta.touched && <span>{meta.error}</span>}\r\n                            </div>\r\n                        )}\r\n                    </Field>\r\n                    <Field name=\"hour\" validate={required}>\r\n                        {({ input, meta }) => (\r\n                            <div>\r\n                                <Label>Godzina</Label>\r\n                                <Input {...input} type=\"time\" placeholder=\"Last Name\" />\r\n                                {meta.error && meta.touched && <span>{meta.error}</span>}\r\n                            </div>\r\n                        )}\r\n                    </Field>\r\n\r\n                    <Button type=\"submit\" disabled={submitting}>\r\n                        Dodaj\r\n                    </Button>\r\n                    <Button\r\n                        type=\"button\"\r\n                        onClick={form.reset}\r\n                        disabled={submitting || pristine}>\r\n                        Reset\r\n                    </Button>\r\n                </form>\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nexport default connect(state => ({\r\n    planner: state.planner,\r\n}), {\r\n    addElement\r\n})(Form);\r\n\r\n","import React from 'react';\r\n\r\nimport { AddContainer } from '../style/Containers';\r\nimport Form from '../components/Form';\r\nimport { Title } from '../style/App';\r\n\r\nconst AddElement = () => {\r\n\r\n    return (\r\n        <AddContainer>\r\n            <Title>Dodaj element do listy zadań dnia!</Title>\r\n            <Form />\r\n        </AddContainer >\r\n    )\r\n}\r\n\r\nexport default AddElement;","import styled from 'styled-components';\r\n\r\nexport const SingleElement = styled.li`\r\n    display: flex;\r\n    align-items: flex-start;\r\n\r\n    background: ${props => props.expired ? \"tomato\" : props.theme.colors.main};\r\n    text-decoration: none;\r\n    list-style: none;\r\n    padding: 5px 10px;\r\n    margin-top: 5px;\r\n`\r\n\r\nexport const Text = styled.p`\r\n    flex-basis: 75%;\r\n    display: inline-block;\r\n    padding: 0px 10px;\r\n    /* overflow-wrap: break-word;\r\n    word-wrap: break-word; */\r\n    font-size: 1.15rem;\r\n    color: #fff;\r\n`\r\n\r\nexport const Hour = styled.span`\r\n    flex-basis: 10%;\r\n    align-self: center;\r\n    text-align: center;\r\n`\r\n\r\nexport const Manage = styled.div`\r\n    flex-basis: 15%;\r\n    min-width: 60px;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n`\r\n\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { SingleElement, Text, Manage, Hour } from '../style/Element'\r\nimport { ButtonInside } from '../style/App';\r\n\r\n\r\nconst Element = ({ id, text, expiredDate, f, expired }) => {\r\n    const date = new Date(expiredDate);\r\n    const dateString = (new Date(expiredDate)).toLocaleDateString();\r\n\r\n    const hours = `${date.getHours() > 9 ? date.getHours() : `0${date.getHours()}`}`;\r\n    const minutes = `${date.getMinutes() > 9 ? date.getMinutes() : `0${date.getMinutes()}`}`;\r\n\r\n    return (\r\n        <SingleElement expired={expired}><Hour>{hours}:{minutes} {dateString}</Hour><Text>{text.length > 100 ? `${text.slice(0, 100)}...` : `${text}`}</Text><Manage>{<ButtonInside onClick={f}>Usuń</ButtonInside>}<Link to={\"/info/\" + id}>{<ButtonInside>Info</ButtonInside>}</Link></Manage></SingleElement>\r\n    )\r\n}\r\n\r\nexport default Element;","import styled from 'styled-components';\r\n\r\nexport const Title = styled.h3`\r\n  letter-spacing: 1.2px;\r\n    text-align: center;\r\n    width: 100%;\r\n`\r\n\r\nexport const List = styled.ul`\r\n    padding: 0;\r\n`","import React from 'react';\r\n\r\nimport { ElementsContainer } from '../style/Containers';\r\nimport Element from '../components/Element';\r\n\r\nimport { List } from '../style/ElementsList';\r\nimport { Title } from '../style/App';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { removeElement } from '../actions/planner.actions';\r\nimport { save } from '../localStorage';\r\n\r\nconst ElementsList = ({ planner, removeClick }) => {\r\n\r\n    save(planner);\r\n\r\n    let sortedPlanner = [...planner];\r\n\r\n    sortedPlanner.sort((a, b) => {\r\n        return a.expiredDate - b.expiredDate;\r\n    });\r\n\r\n    const actualTime = new Date().getTime();\r\n\r\n    let elementsToDo = sortedPlanner.filter(task => task.expiredDate > actualTime)\r\n    let elementsExpired = sortedPlanner.filter(task => task.expiredDate <= actualTime);\r\n\r\n    elementsToDo = elementsToDo.map(element => (\r\n        <Element key={element.id} {...element} f={() => removeClick(element.id)}></Element>\r\n    ));\r\n    elementsExpired = elementsExpired.map(element => (\r\n        <Element expired key={element.id} {...element} f={() => removeClick(element.id)}></Element>\r\n    ));\r\n\r\n    return (\r\n        <ElementsContainer>\r\n            <Title>Liczba elementów do wykonania: {sortedPlanner.length}.</Title>\r\n            <List>\r\n                {elementsToDo}\r\n                {elementsExpired}\r\n            </List>\r\n        </ElementsContainer>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        planner: state.planner\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        removeClick: (id) => {\r\n            dispatch(removeElement(id))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ElementsList);\r\n\r\n","export const load = () => {\r\n    const state = localStorage.getItem('state');\r\n    if (state !== null) {\r\n        return JSON.parse(state);\r\n    }\r\n};\r\n\r\nexport const save = (state) => {\r\n    let statestring = JSON.stringify(state);\r\n    localStorage.setItem('state', statestring);\r\n}\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { ErrorContainer } from '../style/Containers';\r\nimport { Title, ButtonInside } from '../style/App';\r\n\r\nconst NotFound = () => {\r\n\r\n    return (\r\n        <ErrorContainer>\r\n            <Title>Page not found</Title>\r\n            <p>Tutaj nic nie ma, naciśnij niżej aby przenieść się do strony głównej!</p>\r\n            <Link to=\"/\"><ButtonInside>Kliknij tutaj</ButtonInside></Link>\r\n        </ErrorContainer>\r\n    )\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport { InfoContainer } from '../style/Containers';\r\nimport { Subtitle, Title, ButtonInside } from '../style/App';\r\n\r\nconst Info = ({ planner }) => {\r\n\r\n    const actualTime = new Date().getTime();\r\n\r\n    // index in array\r\n    let { id } = useParams();\r\n\r\n    // find element \r\n    const elementExist = planner.find(element => element.id === Number(id));\r\n\r\n    const showDate = (d) => {\r\n        const date = new Date(d);\r\n        const hours = `${date.getHours() > 9 ? date.getHours() : `0${date.getHours()}`}`;\r\n        const minutes = `${date.getMinutes() > 9 ? date.getMinutes() : `0${date.getMinutes()}`}`;\r\n        return `${date.toLocaleDateString()} ${hours}:${minutes}`\r\n    }\r\n    if (elementExist === undefined) {\r\n        return (\r\n            <InfoContainer>\r\n                <Title>Elementu o podanym ID nie mamy w bazie!</Title>\r\n                <Link to=\"/\"><ButtonInside>Wróć do strony głownej</ButtonInside></Link>\r\n            </InfoContainer>\r\n        )\r\n    }\r\n    return (\r\n        <InfoContainer>\r\n            <Title>Informacje o elemencie {id}</Title>\r\n            <Subtitle>Treść</Subtitle>\r\n            <p>{elementExist.text}</p>\r\n            <Subtitle>Element do wykonania do: </Subtitle>\r\n            <p>{showDate(elementExist.expiredDate)}</p>\r\n\r\n            {elementExist.expiredDate < actualTime ? (\r\n                <Subtitle>Wygasł czas na wykonanie zadania!</Subtitle>\r\n            ) : (\r\n                    <Subtitle>Posiadasz jeszcze czas na wykonanie zadania!</Subtitle>\r\n                )}\r\n            <Link to=\"/\" ><ButtonInside>Wróć do strony głownej</ButtonInside></Link>\r\n        </InfoContainer>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        planner: state.planner\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Info);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { ThemeProvider } from \"styled-components\";\nimport { theme, Main, AppContainer } from './style/App'\nimport GlobalStyle from './index.css';\n\nimport AddElement from './containers/AddElement';\nimport ElementsList from './containers/ElementsList'\nimport NotFound from './containers/NotFound';\nimport Info from './containers/Info';\n\nimport { load } from './localStorage';\n\nimport { addElement } from './actions/planner.actions'\n\nconst App = ({ loadElement }) => {\n\n  function loadDateFromLocalStorage() {\n    const loadedState = load();\n\n    if (loadedState !== undefined) {\n      loadedState.forEach(element => {\n        loadElement(element.id, element.expiredDate, element.text, element.createdDate)\n      })\n    }\n  }\n  loadDateFromLocalStorage();\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <ThemeProvider theme={theme}>\n        <AppContainer>\n          <GlobalStyle />\n          <Main>\n            <Switch>\n              <Route exact path=\"/\">\n                <AddElement />\n                <ElementsList />\n              </Route>\n              <Route path=\"/info/:id\">\n                <Info props={null} />\n              </Route>\n              <Route>\n                <NotFound />\n              </Route>\n            </Switch>\n          </Main>\n        </AppContainer>\n      </ThemeProvider>\n    </Router>\n  )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\n  return {\n    loadElement: (id, expiredDate, text, createdDate) => dispatch(addElement(id, expiredDate, text, createdDate))\n  }\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import {\r\n    PLANNER_ADD,\r\n    PLANNER_REMOVE\r\n} from '../constants'\r\n\r\nconst planner = (state = [], action) => {\r\n    switch (action.type) {\r\n        case PLANNER_ADD:\r\n            return [\r\n                ...state, {\r\n                    id: action.id,\r\n                    expiredDate: action.expiredDate,\r\n                    createdDate: action.createdDate,\r\n                    text: action.text,\r\n                }\r\n            ]\r\n        case PLANNER_REMOVE:\r\n            const elementsWithoutElementToRemove = state.filter(element => element.id !== action.id);\r\n            return [\r\n                ...elementsWithoutElementToRemove\r\n            ]\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default planner;","import { combineReducers } from 'redux';\r\nimport plannerReducer from \"./planner.reducer\";\r\n\r\nexport default combineReducers({\r\n    planner: plannerReducer\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport mainReducer from './reducers/index';\n\nconst store = createStore(mainReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}